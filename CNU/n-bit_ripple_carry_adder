 // ripple_carry_adder
`include "FULL_ADDER.v"
 
module ripple_carry_adder 
  #(parameter WIDTH=5)
  (
    input [WIDTH-1:0] A,
    input [WIDTH-1:0] B,
    output [WIDTH-1:0]  SUM,
    output COUT //carry bit
   );
     
  wire [WIDTH:0]     w_CARRY;
  wire [WIDTH-1:0]   w_SUM;
   
  // No carry input on first full adder  
  assign w_CARRY[0] = 1'b0;        
   
  genvar             i;
  generate 
    for (i=0; i<WIDTH; i=i+1) 
      begin
        FULL_ADDER full_adder_inst
            ( 
              .A(A[i]),
              .B(B[i]),
              .CIN(w_CARRY[i]),
              .SUM(w_SUM[i]),
              .COUT(w_CARRY[i+1])
              );
      end
  endgenerate
   
  assign SUM = w_SUM;
  assign COUT = w_CARRY[WIDTH];
 
endmodule
